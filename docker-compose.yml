name: loan_system

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    env_file:
      - ./docker-config/.env.docker
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker-config/mysql/:/etc/mysql/conf.d
      # - ./docker-config/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - loan_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=256M
      --innodb_log_file_size=64M
      --slow_query_log=1
      --slow_query_log_file=/var/log/mysql/slow.log
      --long_query_time=2

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    env_file:
      - ./docker-config/.env.docker
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - loan_network

  alloy:
    image: grafana/alloy:v1.9.2
    container_name: alloy
    ports:
      - "12345:12345"
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./docker-config/alloy/config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./docker-config/.env.docker
    command: >
      run 
      --server.http.listen-addr=0.0.0.0:12345 
      --storage.path=/var/lib/alloy/data
      /etc/alloy/config.alloy
    restart: unless-stopped
    networks:
      - loan_network

  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker-config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=dev_password_123
    networks:
      - loan_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis-insight:
    image: redislabs/redisinsight:2.70
    container_name: redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/db
    networks:
      - loan_network
    depends_on:
      redis:
        condition: service_healthy

  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   container_name: redis-commander
  #   restart: unless-stopped
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379:0:dev_password_123
  #     - HTTP_USER=admin
  #     - HTTP_PASSWORD=admin123
  #   networks:
  #     - redis_network
  #   depends_on:
  #     redis:
  #       condition: service_healthy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  redisinsight_data:
    driver: local

networks:
  loan_network:
    driver: bridge
